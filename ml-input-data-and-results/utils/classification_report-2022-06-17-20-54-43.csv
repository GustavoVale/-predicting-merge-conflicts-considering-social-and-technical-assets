Index,Data_Type,Model,Sampling_Method,Accuracy,Precision,Recall,F1-Score,AUC,RECALL,HYPER_PARAMETERS
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.92,0.32,0.46,0.37,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.92,0.32,0.46,0.37,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.92,0.32,0.46,0.37,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.92,0.32,0.46,0.37,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.92,0.30,0.44,0.36,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.92,0.97,0.94,0.96,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.92,0.30,0.44,0.36,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.92,0.97,0.94,0.96,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.92,0.30,0.44,0.36,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.92,0.30,0.44,0.36,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.92,0.32,0.46,0.37,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.92,0.32,0.46,0.37,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.92,0.32,0.46,0.37,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.92,0.32,0.46,0.37,0.7,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.92,0.30,0.44,0.36,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.92,0.97,0.94,0.96,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.92,0.30,0.44,0.36,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.92,0.97,0.94,0.96,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.92,0.30,0.44,0.36,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.92,0.97,0.95,0.96,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.92,0.30,0.44,0.36,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.91,0.30,0.53,0.38,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.91,0.30,0.54,0.38,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.91,0.30,0.53,0.38,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.91,0.30,0.53,0.38,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.72,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.91,0.28,0.50,0.36,0.72,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.72,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.91,0.28,0.50,0.36,0.72,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.71,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.91,0.27,0.50,0.35,0.71,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.72,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.91,0.28,0.50,0.36,0.72,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.91,0.29,0.54,0.37,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.91,0.29,0.54,0.37,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.91,0.29,0.54,0.37,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.91,0.97,0.93,0.95,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.91,0.29,0.54,0.37,0.73,0.91,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.9,0.97,0.93,0.95,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.9,0.27,0.51,0.35,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.9,0.97,0.93,0.95,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.9,0.27,0.51,0.35,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.9,0.97,0.92,0.95,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.9,0.27,0.51,0.35,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.9,0.97,0.93,0.95,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.9,0.27,0.51,0.35,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.91,0.98,0.93,0.95,0.75,0.91,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.91,0.29,0.57,0.39,0.75,0.91,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.91,0.98,0.92,0.95,0.75,0.91,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.91,0.29,0.57,0.38,0.75,0.91,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.91,0.98,0.92,0.95,0.75,0.91,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.91,0.29,0.57,0.39,0.75,0.91,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.91,0.98,0.93,0.95,0.75,0.91,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.91,0.29,0.57,0.39,0.75,0.91,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.9,0.97,0.92,0.95,0.73,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.9,0.27,0.54,0.36,0.73,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.9,0.97,0.92,0.95,0.73,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.9,0.27,0.54,0.36,0.73,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.9,0.97,0.92,0.95,0.73,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.9,0.27,0.54,0.36,0.73,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.9,0.97,0.92,0.95,0.73,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.9,0.27,0.54,0.36,0.73,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.9,0.98,0.92,0.95,0.75,0.9,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.9,0.28,0.58,0.37,0.75,0.9,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.9,0.98,0.92,0.95,0.75,0.9,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.9,0.27,0.58,0.37,0.75,0.9,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.9,0.98,0.92,0.95,0.75,0.9,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.9,0.28,0.58,0.37,0.75,0.9,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.9,0.98,0.92,0.95,0.75,0.9,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.9,0.28,0.58,0.37,0.75,0.9,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.89,0.97,0.91,0.94,0.73,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.89,0.25,0.55,0.35,0.73,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.89,0.97,0.91,0.94,0.73,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.89,0.25,0.55,0.35,0.73,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.89,0.97,0.91,0.94,0.73,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.89,0.25,0.55,0.35,0.73,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.89,0.97,0.91,0.94,0.73,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.89,0.25,0.55,0.35,0.73,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.9,0.98,0.91,0.95,0.77,0.9,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.9,0.28,0.63,0.39,0.77,0.9,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.9,0.98,0.91,0.95,0.77,0.9,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.9,0.28,0.62,0.39,0.77,0.9,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.9,0.98,0.91,0.95,0.77,0.9,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.9,0.28,0.63,0.39,0.77,0.9,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.9,0.98,0.91,0.95,0.77,0.9,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.9,0.28,0.63,0.39,0.77,0.9,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.89,0.98,0.91,0.94,0.75,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.89,0.26,0.60,0.36,0.75,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.89,0.98,0.91,0.94,0.75,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.89,0.26,0.60,0.36,0.75,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.89,0.98,0.91,0.94,0.75,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.89,0.26,0.60,0.36,0.75,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.89,0.98,0.91,0.94,0.75,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.89,0.26,0.60,0.36,0.75,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.9,0.98,0.91,0.94,0.76,0.9,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.9,0.27,0.60,0.37,0.76,0.9,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.9,0.98,0.91,0.94,0.76,0.9,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.9,0.27,0.60,0.37,0.76,0.9,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.9,0.98,0.91,0.94,0.76,0.9,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.9,0.27,0.60,0.37,0.76,0.9,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.9,0.98,0.91,0.94,0.76,0.9,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.9,0.27,0.60,0.37,0.76,0.9,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.89,0.98,0.90,0.94,0.74,0.89,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.89,0.25,0.59,0.35,0.74,0.89,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.89,0.98,0.90,0.94,0.74,0.89,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.89,0.25,0.58,0.35,0.74,0.89,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.89,0.98,0.90,0.94,0.75,0.89,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.89,0.25,0.59,0.35,0.75,0.89,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.89,0.98,0.90,0.94,0.74,0.89,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.89,0.25,0.59,0.35,0.74,0.89,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.88,0.98,0.90,0.94,0.78,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.88,0.25,0.66,0.37,0.78,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.89,0.98,0.90,0.94,0.78,0.89,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.89,0.26,0.66,0.37,0.78,0.89,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.89,0.98,0.90,0.94,0.78,0.89,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.89,0.26,0.66,0.37,0.78,0.89,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.88,0.98,0.90,0.94,0.78,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.88,0.25,0.66,0.37,0.78,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.88,0.98,0.89,0.93,0.77,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.88,0.24,0.64,0.35,0.77,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.88,0.98,0.89,0.93,0.77,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.88,0.24,0.64,0.35,0.77,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.88,0.98,0.89,0.93,0.77,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.88,0.24,0.64,0.35,0.77,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.88,0.98,0.89,0.93,0.77,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.88,0.24,0.64,0.35,0.77,0.88,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.87,0.98,0.89,0.93,0.77,0.87,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.87,0.23,0.65,0.34,0.77,0.87,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.87,0.98,0.89,0.93,0.77,0.87,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.87,0.23,0.65,0.34,0.77,0.87,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.87,0.98,0.89,0.93,0.77,0.87,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.87,0.23,0.65,0.34,0.77,0.87,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.87,0.98,0.89,0.93,0.77,0.87,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.87,0.23,0.65,0.34,0.77,0.87,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.86,0.98,0.88,0.92,0.76,0.86,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.86,0.22,0.64,0.32,0.76,0.86,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.86,0.98,0.88,0.92,0.76,0.86,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.86,0.22,0.64,0.32,0.76,0.86,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.88,0.92,0.76,0.86,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.86,0.22,0.64,0.32,0.76,0.86,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.88,0.92,0.76,0.86,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.86,0.22,0.64,0.32,0.76,0.86,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.87,0.98,0.88,0.93,0.8,0.87,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.87,0.24,0.71,0.36,0.8,0.87,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.87,0.98,0.88,0.93,0.8,0.87,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.87,0.24,0.71,0.36,0.8,0.87,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.87,0.98,0.88,0.93,0.79,0.87,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.87,0.24,0.71,0.36,0.79,0.87,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.87,0.98,0.88,0.93,0.8,0.87,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.87,0.24,0.71,0.36,0.8,0.87,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.77,0.86,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.86,0.21,0.68,0.33,0.77,0.86,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.77,0.86,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.86,0.21,0.68,0.33,0.77,0.86,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.77,0.86,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.86,0.21,0.68,0.33,0.77,0.86,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.77,0.86,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.86,0.21,0.68,0.33,0.77,0.86,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.85,0.98,0.86,0.92,0.79,0.85,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.85,0.22,0.71,0.33,0.79,0.85,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.86,0.98,0.86,0.92,0.79,0.86,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.86,0.22,0.71,0.33,0.79,0.86,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.86,0.92,0.79,0.86,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.86,0.22,0.71,0.33,0.79,0.86,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.85,0.98,0.86,0.92,0.79,0.85,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.85,0.22,0.71,0.33,0.79,0.85,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.77,0.84,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.84,0.19,0.69,0.30,0.77,0.84,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.77,0.84,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.84,0.19,0.69,0.30,0.77,0.84,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.77,0.84,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.84,0.19,0.69,0.30,0.77,0.84,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.77,0.84,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.84,0.19,0.69,0.30,0.77,0.84,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.8,0.86,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.86,0.23,0.73,0.35,0.8,0.86,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.8,0.86,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.86,0.23,0.73,0.35,0.8,0.86,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.8,0.86,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.86,0.23,0.73,0.35,0.8,0.86,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.8,0.86,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.86,0.23,0.73,0.35,0.8,0.86,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.85,0.98,0.86,0.92,0.78,0.85,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.85,0.21,0.69,0.32,0.78,0.85,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.85,0.98,0.86,0.92,0.78,0.85,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.85,0.21,0.69,0.32,0.78,0.85,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.85,0.98,0.86,0.92,0.78,0.85,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.85,0.21,0.69,0.32,0.78,0.85,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.85,0.98,0.86,0.92,0.78,0.85,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.85,0.21,0.69,0.32,0.78,0.85,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.85,0.98,0.85,0.91,0.79,0.85,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.85,0.21,0.73,0.32,0.79,0.85,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.85,0.98,0.85,0.91,0.79,0.85,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.85,0.21,0.73,0.32,0.79,0.85,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.85,0.98,0.85,0.91,0.79,0.85,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.85,0.21,0.73,0.32,0.79,0.85,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.85,0.98,0.85,0.91,0.79,0.85,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.85,0.21,0.73,0.32,0.79,0.85,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.83,0.98,0.83,0.90,0.77,0.83,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.83,0.19,0.71,0.29,0.77,0.83,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.83,0.98,0.83,0.90,0.77,0.83,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.83,0.19,0.71,0.29,0.77,0.83,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.83,0.98,0.83,0.90,0.77,0.83,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.83,0.19,0.71,0.29,0.77,0.83,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.83,0.98,0.83,0.90,0.77,0.83,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.83,0.19,0.71,0.29,0.77,0.83,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.8,0.86,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.86,0.23,0.73,0.35,0.8,0.86,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.8,0.86,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.86,0.23,0.73,0.35,0.8,0.86,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.8,0.86,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.86,0.23,0.73,0.35,0.8,0.86,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.87,0.92,0.8,0.86,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.86,0.23,0.73,0.35,0.8,0.86,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.85,0.98,0.85,0.91,0.78,0.85,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.85,0.21,0.71,0.32,0.78,0.85,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.85,0.98,0.85,0.91,0.78,0.85,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.85,0.21,0.71,0.32,0.78,0.85,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.85,0.98,0.85,0.91,0.78,0.85,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.85,0.21,0.71,0.32,0.78,0.85,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.85,0.98,0.85,0.91,0.78,0.85,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.85,0.21,0.71,0.32,0.78,0.85,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.79,0.84,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.84,0.21,0.73,0.32,0.79,0.84,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.79,0.84,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.84,0.21,0.73,0.32,0.79,0.84,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.79,0.84,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.84,0.21,0.73,0.32,0.79,0.84,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.79,0.84,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.84,0.21,0.73,0.32,0.79,0.84,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.83,0.98,0.83,0.90,0.77,0.83,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.83,0.18,0.72,0.29,0.77,0.83,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.83,0.98,0.83,0.90,0.77,0.83,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.83,0.19,0.72,0.29,0.77,0.83,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.83,0.98,0.83,0.90,0.77,0.83,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.83,0.19,0.72,0.29,0.77,0.83,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.83,0.98,0.83,0.90,0.77,0.83,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.83,0.18,0.72,0.29,0.77,0.83,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.86,0.98,0.86,0.92,0.8,0.86,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.86,0.22,0.74,0.34,0.8,0.86,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.86,0.98,0.86,0.92,0.8,0.86,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.86,0.22,0.74,0.34,0.8,0.86,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.86,0.92,0.8,0.86,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.86,0.22,0.74,0.34,0.8,0.86,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.86,0.92,0.8,0.86,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.86,0.22,0.74,0.34,0.8,0.86,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.78,0.84,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.84,0.20,0.71,0.31,0.78,0.84,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.78,0.84,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.84,0.20,0.71,0.31,0.78,0.84,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.78,0.84,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.84,0.20,0.71,0.31,0.78,0.84,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.85,0.91,0.78,0.84,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.84,0.20,0.71,0.31,0.78,0.84,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.79,0.84,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.84,0.20,0.73,0.32,0.79,0.84,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.79,0.84,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.84,0.20,0.73,0.32,0.79,0.84,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.79,0.84,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.84,0.20,0.73,0.31,0.79,0.84,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.79,0.84,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.84,0.20,0.73,0.32,0.79,0.84,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.82,0.98,0.82,0.90,0.77,0.82,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.82,0.18,0.71,0.28,0.77,0.82,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.82,0.98,0.83,0.90,0.77,0.82,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.82,0.18,0.71,0.28,0.77,0.82,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.82,0.98,0.83,0.90,0.77,0.82,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.82,0.18,0.71,0.28,0.77,0.82,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.82,0.98,0.82,0.90,0.77,0.82,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.82,0.18,0.71,0.28,0.77,0.82,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.86,0.98,0.86,0.92,0.8,0.86,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.86,0.22,0.74,0.34,0.8,0.86,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.86,0.98,0.86,0.92,0.8,0.86,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.86,0.22,0.74,0.34,0.8,0.86,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.85,0.98,0.86,0.92,0.8,0.85,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.85,0.22,0.74,0.34,0.8,0.85,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.86,0.98,0.86,0.92,0.8,0.86,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.86,0.22,0.74,0.34,0.8,0.86,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.78,0.84,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.84,0.20,0.71,0.31,0.78,0.84,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.78,0.84,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.84,0.20,0.71,0.31,0.78,0.84,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.78,0.84,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.84,0.20,0.71,0.31,0.78,0.84,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.78,0.84,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.84,0.20,0.71,0.31,0.78,0.84,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.79,0.84,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.84,0.20,0.73,0.31,0.79,0.84,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.79,0.84,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.84,0.20,0.73,0.31,0.79,0.84,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.79,0.84,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.84,0.20,0.74,0.31,0.79,0.84,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.84,0.98,0.84,0.91,0.79,0.84,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.84,0.20,0.73,0.31,0.79,0.84,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.82,0.98,0.82,0.89,0.76,0.82,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.82,0.17,0.71,0.28,0.76,0.82,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.82,0.98,0.82,0.89,0.76,0.82,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.82,0.17,0.71,0.28,0.76,0.82,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.82,0.98,0.82,0.89,0.77,0.82,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.82,0.18,0.71,0.28,0.77,0.82,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.82,0.98,0.82,0.89,0.76,0.82,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.82,0.17,0.71,0.28,0.76,0.82,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.85,0.98,0.86,0.92,0.8,0.85,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.85,0.22,0.74,0.33,0.8,0.85,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.85,0.98,0.86,0.92,0.8,0.85,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.85,0.22,0.74,0.34,0.8,0.85,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.85,0.98,0.86,0.92,0.8,0.85,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.85,0.22,0.74,0.33,0.8,0.85,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.85,0.98,0.86,0.92,0.8,0.85,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.85,0.22,0.74,0.33,0.8,0.85,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.83,0.98,0.84,0.91,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.83,0.19,0.72,0.31,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.83,0.98,0.84,0.91,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.83,0.19,0.72,0.31,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.83,0.98,0.84,0.91,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.83,0.19,0.72,0.31,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.83,0.98,0.84,0.91,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.83,0.19,0.72,0.31,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.83,0.98,0.84,0.91,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.83,0.20,0.73,0.31,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.83,0.98,0.84,0.91,0.79,0.83,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.83,0.20,0.73,0.31,0.79,0.83,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.83,0.98,0.84,0.91,0.79,0.83,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.83,0.20,0.73,0.31,0.79,0.83,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.83,0.98,0.84,0.91,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.83,0.20,0.73,0.31,0.78,0.83,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,SVMSmote,0,0.81,0.98,0.82,0.89,0.76,0.81,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,1,0.81,0.17,0.70,0.28,0.76,0.81,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,SVMSmote,0,0.81,0.98,0.82,0.89,0.76,0.81,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,1,0.81,0.17,0.70,0.28,0.76,0.81,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,SVMSmote,0,0.81,0.98,0.82,0.89,0.76,0.81,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,1,0.81,0.17,0.70,0.28,0.76,0.81,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,SVMSmote,0,0.81,0.98,0.82,0.89,0.76,0.81,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,SVMSmote,1,0.81,0.17,0.70,0.28,0.76,0.81,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.91,0.97,0.93,0.95,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.91,0.28,0.50,0.36,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.91,0.97,0.93,0.95,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.91,0.28,0.50,0.36,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.91,0.97,0.93,0.95,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.91,0.28,0.50,0.36,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.91,0.97,0.93,0.95,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.91,0.28,0.50,0.36,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.9,0.97,0.93,0.95,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.9,0.26,0.48,0.34,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.9,0.97,0.93,0.95,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.9,0.26,0.48,0.33,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.9,0.97,0.93,0.95,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.9,0.26,0.48,0.34,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.9,0.97,0.93,0.95,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.9,0.26,0.48,0.34,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.91,0.97,0.93,0.95,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.91,0.28,0.50,0.36,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.91,0.97,0.93,0.95,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.91,0.28,0.50,0.36,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.91,0.97,0.93,0.95,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.91,0.28,0.50,0.36,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.91,0.97,0.93,0.95,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.91,0.28,0.50,0.36,0.72,0.91,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.9,0.97,0.93,0.95,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.9,0.26,0.48,0.34,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.9,0.97,0.93,0.95,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.9,0.26,0.48,0.33,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.9,0.97,0.93,0.95,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.9,0.26,0.48,0.34,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.9,0.97,0.93,0.95,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.9,0.26,0.48,0.34,0.7,0.9,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.89,0.98,0.91,0.94,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.89,0.26,0.60,0.36,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.89,0.98,0.91,0.94,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.89,0.26,0.60,0.36,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.89,0.98,0.91,0.94,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.89,0.26,0.60,0.36,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.89,0.98,0.91,0.94,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.89,0.26,0.60,0.36,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.89,0.98,0.90,0.94,0.74,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.89,0.24,0.57,0.33,0.74,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.88,0.98,0.90,0.94,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.88,0.24,0.57,0.33,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.88,0.98,0.90,0.94,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.88,0.24,0.57,0.33,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.89,0.98,0.90,0.94,0.74,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.89,0.24,0.57,0.33,0.74,0.89,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.89,0.98,0.90,0.94,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.89,0.25,0.61,0.36,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.89,0.98,0.90,0.94,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.89,0.25,0.61,0.36,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.89,0.98,0.90,0.94,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.89,0.25,0.61,0.36,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.89,0.98,0.90,0.94,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.89,0.25,0.61,0.36,0.76,0.89,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.88,0.98,0.89,0.93,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.88,0.23,0.59,0.33,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.88,0.98,0.89,0.93,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.88,0.23,0.59,0.33,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.88,0.98,0.89,0.93,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.88,0.23,0.59,0.33,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.88,0.98,0.89,0.93,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.88,0.23,0.59,0.33,0.74,0.88,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.88,0.98,0.89,0.94,0.78,0.88,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.88,0.25,0.67,0.36,0.78,0.88,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.88,0.98,0.89,0.93,0.78,0.88,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.88,0.25,0.66,0.36,0.78,0.88,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.88,0.98,0.89,0.93,0.78,0.88,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.88,0.25,0.66,0.36,0.78,0.88,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.88,0.98,0.89,0.94,0.78,0.88,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.88,0.25,0.67,0.36,0.78,0.88,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.87,0.98,0.89,0.93,0.76,0.87,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.87,0.23,0.63,0.33,0.76,0.87,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.87,0.98,0.89,0.93,0.76,0.87,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.87,0.23,0.63,0.33,0.76,0.87,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.87,0.98,0.89,0.93,0.76,0.87,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.87,0.23,0.63,0.33,0.76,0.87,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.87,0.98,0.89,0.93,0.76,0.87,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.87,0.23,0.63,0.33,0.76,0.87,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.87,0.98,0.88,0.93,0.78,0.87,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.87,0.24,0.67,0.35,0.78,0.87,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.87,0.98,0.88,0.93,0.78,0.87,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.87,0.23,0.67,0.35,0.78,0.87,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.87,0.98,0.88,0.93,0.77,0.87,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.87,0.23,0.67,0.35,0.77,0.87,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.87,0.98,0.88,0.93,0.78,0.87,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.87,0.24,0.67,0.35,0.78,0.87,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.86,0.98,0.87,0.92,0.76,0.86,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.86,0.21,0.64,0.32,0.76,0.86,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.86,0.98,0.87,0.92,0.76,0.86,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.86,0.21,0.64,0.32,0.76,0.86,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.86,0.98,0.87,0.92,0.76,0.86,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.86,0.21,0.64,0.32,0.76,0.86,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.86,0.98,0.87,0.92,0.76,0.86,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.86,0.21,0.64,0.32,0.76,0.86,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.87,0.98,0.87,0.93,0.8,0.87,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.87,0.23,0.73,0.36,0.8,0.87,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.87,0.98,0.87,0.92,0.8,0.87,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.87,0.23,0.73,0.35,0.8,0.87,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.87,0.98,0.87,0.93,0.8,0.87,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.87,0.23,0.73,0.35,0.8,0.87,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.87,0.98,0.87,0.93,0.8,0.87,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.87,0.23,0.73,0.36,0.8,0.87,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.85,0.98,0.86,0.92,0.78,0.85,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.85,0.21,0.70,0.33,0.78,0.85,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.85,0.98,0.86,0.92,0.78,0.85,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.85,0.21,0.70,0.33,0.78,0.85,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.85,0.98,0.86,0.92,0.78,0.85,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.85,0.21,0.70,0.33,0.78,0.85,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.85,0.98,0.86,0.92,0.78,0.85,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.85,0.21,0.70,0.33,0.78,0.85,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.86,0.98,0.86,0.92,0.79,0.86,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.86,0.22,0.72,0.34,0.79,0.86,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.86,0.98,0.86,0.92,0.79,0.86,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.86,0.22,0.72,0.34,0.79,0.86,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.86,0.98,0.86,0.92,0.79,0.86,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.86,0.22,0.72,0.34,0.79,0.86,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.86,0.98,0.86,0.92,0.79,0.86,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.86,0.22,0.72,0.34,0.79,0.86,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.84,0.98,0.85,0.91,0.78,0.84,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.84,0.20,0.70,0.31,0.78,0.84,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.84,0.98,0.85,0.91,0.78,0.84,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.84,0.20,0.70,0.31,0.78,0.84,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.84,0.98,0.85,0.91,0.78,0.84,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.84,0.20,0.70,0.31,0.78,0.84,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.84,0.98,0.85,0.91,0.78,0.84,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.84,0.20,0.70,0.31,0.78,0.84,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.84,0.99,0.84,0.91,0.82,0.84,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.84,0.21,0.80,0.33,0.82,0.84,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.84,0.99,0.84,0.91,0.82,0.84,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.84,0.21,0.80,0.33,0.82,0.84,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.84,0.99,0.84,0.91,0.82,0.84,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.84,0.21,0.80,0.33,0.82,0.84,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.84,0.99,0.84,0.91,0.82,0.84,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.84,0.21,0.80,0.33,0.82,0.84,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.82,0.99,0.83,0.90,0.8,0.82,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.82,0.19,0.78,0.31,0.8,0.82,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.82,0.99,0.83,0.90,0.8,0.82,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.82,0.19,0.78,0.31,0.8,0.82,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.82,0.99,0.83,0.90,0.8,0.82,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.82,0.19,0.78,0.31,0.8,0.82,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.82,0.99,0.83,0.90,0.8,0.82,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.82,0.19,0.78,0.31,0.8,0.82,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.82,0.99,0.82,0.90,0.82,0.82,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.82,0.19,0.81,0.31,0.82,0.82,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.82,0.99,0.82,0.90,0.82,0.82,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.82,0.19,0.81,0.31,0.82,0.82,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.82,0.99,0.82,0.90,0.82,0.82,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.82,0.19,0.82,0.31,0.82,0.82,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.82,0.99,0.82,0.90,0.82,0.82,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.82,0.19,0.81,0.31,0.82,0.82,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.8,0.99,0.80,0.89,0.8,0.8,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.8,0.18,0.79,0.29,0.8,0.8,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.8,0.99,0.80,0.89,0.8,0.8,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.8,0.18,0.79,0.29,0.8,0.8,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.8,0.99,0.80,0.89,0.8,0.8,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.8,0.18,0.79,0.29,0.8,0.8,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.8,0.99,0.80,0.89,0.8,0.8,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.8,0.18,0.79,0.29,0.8,0.8,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.81,0.99,0.81,0.89,0.84,0.81,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.81,0.20,0.88,0.32,0.84,0.81,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.81,0.99,0.81,0.89,0.84,0.81,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.81,0.19,0.88,0.32,0.84,0.81,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.81,0.99,0.81,0.89,0.84,0.81,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.81,0.20,0.88,0.32,0.84,0.81,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.81,0.99,0.81,0.89,0.84,0.81,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.81,0.20,0.88,0.32,0.84,0.81,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.79,0.99,0.79,0.88,0.82,0.79,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.79,0.18,0.86,0.29,0.82,0.79,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.79,0.99,0.79,0.88,0.82,0.79,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.79,0.18,0.86,0.29,0.82,0.79,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.79,0.99,0.79,0.88,0.82,0.79,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.79,0.18,0.86,0.29,0.82,0.79,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.79,0.99,0.79,0.88,0.82,0.79,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.79,0.18,0.86,0.29,0.82,0.79,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.79,0.99,0.78,0.87,0.84,0.79,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.79,0.18,0.89,0.30,0.84,0.79,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.78,0.99,0.78,0.87,0.84,0.78,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.78,0.18,0.89,0.30,0.84,0.78,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.79,0.99,0.78,0.87,0.84,0.79,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.79,0.18,0.89,0.30,0.84,0.79,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.79,0.99,0.78,0.87,0.84,0.79,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.79,0.18,0.89,0.30,0.84,0.79,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.81,0.76,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.76,0.16,0.87,0.27,0.81,0.76,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.81,0.76,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.76,0.16,0.87,0.27,0.81,0.76,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.81,0.76,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.76,0.16,0.87,0.27,0.81,0.76,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.81,0.76,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.76,0.16,0.87,0.27,0.81,0.76,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.8,0.99,0.79,0.88,0.84,0.8,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.8,0.19,0.90,0.31,0.84,0.8,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.8,0.99,0.79,0.88,0.84,0.8,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.8,0.19,0.89,0.31,0.84,0.8,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.8,0.99,0.79,0.88,0.84,0.8,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.8,0.19,0.89,0.31,0.84,0.8,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.8,0.99,0.79,0.88,0.84,0.8,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.8,0.19,0.90,0.31,0.84,0.8,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.82,0.78,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.78,0.17,0.87,0.28,0.82,0.78,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.82,0.78,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.78,0.17,0.86,0.28,0.82,0.78,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.82,0.78,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.78,0.17,0.86,0.28,0.82,0.78,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.82,0.78,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.78,0.17,0.87,0.28,0.82,0.78,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.83,0.77,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.77,0.17,0.90,0.28,0.83,0.77,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.83,0.77,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.77,0.17,0.90,0.29,0.83,0.77,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.83,0.77,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.77,0.17,0.89,0.28,0.83,0.77,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.83,0.77,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.77,0.17,0.90,0.28,0.83,0.77,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.74,0.99,0.74,0.85,0.81,0.74,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.74,0.15,0.88,0.26,0.81,0.74,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.74,0.99,0.74,0.85,0.81,0.74,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.74,0.15,0.88,0.26,0.81,0.74,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.74,0.99,0.74,0.85,0.81,0.74,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.74,0.15,0.88,0.26,0.81,0.74,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.74,0.99,0.74,0.85,0.81,0.74,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.74,0.15,0.88,0.26,0.81,0.74,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.79,0.99,0.78,0.88,0.84,0.79,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.79,0.18,0.90,0.30,0.84,0.79,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.79,0.99,0.78,0.88,0.84,0.79,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.79,0.18,0.90,0.30,0.84,0.79,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.79,0.99,0.78,0.88,0.84,0.79,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.79,0.18,0.90,0.30,0.84,0.79,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.79,0.99,0.78,0.88,0.84,0.79,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.79,0.18,0.90,0.30,0.84,0.79,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.82,0.77,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.77,0.17,0.88,0.28,0.82,0.77,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.82,0.77,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.77,0.17,0.88,0.28,0.82,0.77,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.82,0.77,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.77,0.17,0.88,0.28,0.82,0.77,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.82,0.77,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.77,0.17,0.88,0.28,0.82,0.77,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.83,0.76,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.76,0.16,0.90,0.28,0.83,0.76,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.83,0.76,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.76,0.16,0.90,0.28,0.83,0.76,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.83,0.76,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.76,0.16,0.90,0.28,0.83,0.76,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.83,0.76,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.76,0.16,0.90,0.28,0.83,0.76,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.74,0.99,0.73,0.84,0.81,0.74,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.74,0.15,0.89,0.26,0.81,0.74,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.74,0.99,0.73,0.84,0.81,0.74,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.74,0.15,0.89,0.26,0.81,0.74,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.74,0.99,0.73,0.84,0.81,0.74,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.74,0.15,0.88,0.26,0.81,0.74,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.74,0.99,0.73,0.84,0.81,0.74,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.74,0.15,0.89,0.26,0.81,0.74,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.84,0.78,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.78,0.18,0.90,0.29,0.84,0.78,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.84,0.78,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.78,0.17,0.90,0.29,0.84,0.78,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.84,0.78,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.78,0.18,0.90,0.29,0.84,0.78,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.84,0.78,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.78,0.18,0.90,0.29,0.84,0.78,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.82,0.76,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.76,0.16,0.89,0.28,0.82,0.76,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.82,0.76,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.76,0.16,0.89,0.28,0.82,0.76,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.82,0.76,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.76,0.16,0.89,0.28,0.82,0.76,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.76,0.99,0.76,0.86,0.82,0.76,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.76,0.16,0.89,0.28,0.82,0.76,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.75,0.99,0.75,0.85,0.82,0.75,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.75,0.16,0.90,0.27,0.82,0.75,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.75,0.99,0.75,0.85,0.82,0.75,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.75,0.16,0.90,0.27,0.82,0.75,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.75,0.99,0.75,0.85,0.82,0.75,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.75,0.16,0.90,0.27,0.82,0.75,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.75,0.99,0.75,0.85,0.82,0.75,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.75,0.16,0.90,0.27,0.82,0.75,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.73,0.99,0.72,0.84,0.8,0.73,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.73,0.15,0.88,0.25,0.8,0.73,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.73,0.99,0.72,0.84,0.8,0.73,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.73,0.15,0.88,0.25,0.8,0.73,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.73,0.99,0.72,0.84,0.8,0.73,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.73,0.15,0.88,0.25,0.8,0.73,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.73,0.99,0.72,0.84,0.8,0.73,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.73,0.15,0.88,0.25,0.8,0.73,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.84,0.78,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.78,0.17,0.91,0.29,0.84,0.78,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.84,0.78,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.78,0.17,0.91,0.29,0.84,0.78,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.84,0.78,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.78,0.17,0.91,0.29,0.84,0.78,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.78,0.99,0.77,0.87,0.84,0.78,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.78,0.17,0.91,0.29,0.84,0.78,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.76,0.99,0.75,0.85,0.82,0.76,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.76,0.16,0.90,0.27,0.82,0.76,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.76,0.99,0.75,0.85,0.82,0.76,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.76,0.16,0.90,0.27,0.82,0.76,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.76,0.99,0.75,0.85,0.82,0.76,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.76,0.16,0.90,0.27,0.82,0.76,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.76,0.99,0.75,0.85,0.82,0.76,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.76,0.16,0.90,0.27,0.82,0.76,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.75,0.99,0.74,0.85,0.83,0.75,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.75,0.16,0.91,0.27,0.83,0.75,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.75,0.99,0.74,0.85,0.83,0.75,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.75,0.16,0.91,0.27,0.83,0.75,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.75,0.99,0.74,0.85,0.83,0.75,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.75,0.16,0.91,0.27,0.83,0.75,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.75,0.99,0.74,0.85,0.83,0.75,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.75,0.16,0.91,0.27,0.83,0.75,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.73,0.99,0.72,0.83,0.81,0.73,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.73,0.14,0.90,0.25,0.81,0.73,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.73,0.99,0.72,0.83,0.81,0.73,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.73,0.14,0.90,0.25,0.81,0.73,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.73,0.99,0.72,0.83,0.81,0.73,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.73,0.14,0.90,0.25,0.81,0.73,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.73,0.99,0.72,0.83,0.81,0.73,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.73,0.14,0.90,0.25,0.81,0.73,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.84,0.77,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.77,0.17,0.91,0.29,0.84,0.77,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.84,0.77,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.77,0.17,0.91,0.29,0.84,0.77,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.84,0.77,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.77,0.17,0.91,0.29,0.84,0.77,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.77,0.99,0.76,0.86,0.84,0.77,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.77,0.17,0.91,0.29,0.84,0.77,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.75,0.99,0.74,0.85,0.82,0.75,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.75,0.16,0.89,0.27,0.82,0.75,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.75,0.99,0.74,0.85,0.82,0.75,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.75,0.16,0.89,0.27,0.82,0.75,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.75,0.99,0.74,0.85,0.82,0.75,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.75,0.16,0.89,0.27,0.82,0.75,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.75,0.99,0.74,0.85,0.82,0.75,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.75,0.16,0.89,0.27,0.82,0.75,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.74,0.99,0.73,0.84,0.82,0.74,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.74,0.16,0.92,0.27,0.82,0.74,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.74,0.99,0.73,0.84,0.82,0.74,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.74,0.15,0.91,0.26,0.82,0.74,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.74,0.99,0.73,0.84,0.82,0.74,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.74,0.16,0.92,0.27,0.82,0.74,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.74,0.99,0.73,0.84,0.82,0.74,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.74,0.16,0.92,0.27,0.82,0.74,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,Adasyn,0,0.72,0.99,0.71,0.83,0.8,0.72,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,1,0.72,0.14,0.88,0.24,0.8,0.72,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,Adasyn,0,0.72,0.99,0.71,0.83,0.8,0.72,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,1,0.72,0.14,0.88,0.24,0.8,0.72,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,Adasyn,0,0.72,0.99,0.71,0.83,0.8,0.72,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,1,0.72,0.14,0.88,0.24,0.8,0.72,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,Adasyn,0,0.72,0.99,0.71,0.83,0.8,0.72,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,Adasyn,1,0.72,0.14,0.88,0.24,0.8,0.72,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.96,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.92,0.31,0.47,0.37,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.96,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.92,0.31,0.47,0.37,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.96,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.92,0.31,0.47,0.37,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.96,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.92,0.31,0.47,0.37,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.95,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.92,0.29,0.45,0.35,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.95,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.92,0.28,0.44,0.35,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.95,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.92,0.28,0.44,0.35,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.95,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.92,0.29,0.45,0.35,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.96,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.92,0.31,0.47,0.37,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.96,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.92,0.31,0.47,0.37,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.96,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.92,0.31,0.47,0.37,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.96,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.92,0.31,0.47,0.37,0.71,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.95,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.92,0.29,0.45,0.35,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.95,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.92,0.28,0.44,0.35,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.95,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.92,0.28,0.44,0.35,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.92,0.97,0.94,0.95,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.92,0.29,0.45,0.35,0.69,0.92,"('n_neighbors:', 1, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.91,0.98,0.92,0.95,0.75,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.91,0.28,0.57,0.38,0.75,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.9,0.98,0.92,0.95,0.74,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.9,0.28,0.57,0.38,0.74,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.9,0.98,0.92,0.95,0.75,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.9,0.28,0.57,0.38,0.75,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.91,0.98,0.92,0.95,0.75,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.91,0.28,0.57,0.38,0.75,0.91,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.9,0.97,0.92,0.95,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.9,0.27,0.53,0.35,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.9,0.97,0.92,0.95,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.9,0.27,0.53,0.35,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.9,0.97,0.92,0.95,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.9,0.26,0.53,0.35,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.9,0.97,0.92,0.95,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.9,0.27,0.53,0.35,0.72,0.9,"('n_neighbors:', 3, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.9,0.98,0.92,0.95,0.75,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.9,0.27,0.58,0.37,0.75,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.9,0.98,0.92,0.95,0.75,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.9,0.27,0.57,0.37,0.75,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.9,0.98,0.92,0.95,0.75,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.9,0.27,0.57,0.37,0.75,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.9,0.98,0.92,0.95,0.75,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.9,0.27,0.58,0.37,0.75,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.9,0.97,0.92,0.94,0.73,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.9,0.25,0.54,0.35,0.73,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.9,0.97,0.92,0.94,0.73,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.9,0.25,0.54,0.35,0.73,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.9,0.97,0.92,0.94,0.73,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.9,0.25,0.53,0.34,0.73,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.9,0.97,0.92,0.94,0.73,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.9,0.25,0.54,0.35,0.73,0.9,"('n_neighbors:', 3, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.9,0.98,0.91,0.94,0.76,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.9,0.27,0.62,0.38,0.76,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.9,0.98,0.91,0.94,0.77,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.9,0.27,0.62,0.38,0.77,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.9,0.98,0.91,0.94,0.76,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.9,0.27,0.62,0.38,0.76,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.9,0.98,0.91,0.94,0.76,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.9,0.27,0.62,0.38,0.76,0.9,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.91,0.94,0.75,0.89,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.58,0.36,0.75,0.89,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.91,0.94,0.75,0.89,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.58,0.36,0.75,0.89,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.91,0.94,0.75,0.89,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.58,0.36,0.75,0.89,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.91,0.94,0.75,0.89,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.58,0.36,0.75,0.89,"('n_neighbors:', 5, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.90,0.94,0.76,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.62,0.36,0.76,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.90,0.94,0.76,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.62,0.36,0.76,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.90,0.94,0.76,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.62,0.36,0.76,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.90,0.94,0.76,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.62,0.36,0.76,0.89,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.90,0.94,0.75,0.88,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.88,0.24,0.59,0.34,0.75,0.88,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.90,0.94,0.75,0.88,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.88,0.24,0.59,0.34,0.75,0.88,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.90,0.94,0.75,0.88,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.88,0.24,0.59,0.34,0.75,0.88,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.90,0.94,0.75,0.88,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.88,0.24,0.59,0.34,0.75,0.88,"('n_neighbors:', 5, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.90,0.94,0.78,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.67,0.38,0.78,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.90,0.94,0.78,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.67,0.38,0.78,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.90,0.94,0.78,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.67,0.37,0.78,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.89,0.98,0.90,0.94,0.78,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.89,0.26,0.67,0.38,0.78,0.89,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.89,0.93,0.76,0.88,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.88,0.24,0.63,0.35,0.76,0.88,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.89,0.93,0.76,0.88,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.88,0.24,0.64,0.35,0.76,0.88,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.89,0.93,0.76,0.88,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.88,0.24,0.63,0.35,0.76,0.88,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.89,0.93,0.76,0.88,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.88,0.24,0.63,0.35,0.76,0.88,"('n_neighbors:', 10, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.89,0.94,0.78,0.88,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.88,0.25,0.66,0.36,0.78,0.88,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.90,0.94,0.78,0.88,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.88,0.25,0.66,0.36,0.78,0.88,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.89,0.94,0.78,0.88,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.88,0.25,0.66,0.36,0.78,0.88,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.88,0.98,0.89,0.94,0.78,0.88,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.88,0.25,0.66,0.36,0.78,0.88,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.87,0.98,0.89,0.93,0.76,0.87,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.87,0.23,0.63,0.33,0.76,0.87,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.87,0.98,0.89,0.93,0.76,0.87,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.87,0.23,0.63,0.34,0.76,0.87,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.87,0.98,0.89,0.93,0.76,0.87,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.87,0.23,0.63,0.33,0.76,0.87,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.87,0.98,0.89,0.93,0.76,0.87,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.87,0.23,0.63,0.33,0.76,0.87,"('n_neighbors:', 10, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.87,0.98,0.88,0.93,0.8,0.87,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.87,0.24,0.72,0.36,0.8,0.87,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.87,0.98,0.88,0.93,0.8,0.87,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.87,0.24,0.72,0.36,0.8,0.87,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.87,0.98,0.88,0.93,0.8,0.87,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.87,0.24,0.72,0.35,0.8,0.87,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.87,0.98,0.88,0.93,0.8,0.87,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.87,0.24,0.72,0.36,0.8,0.87,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.86,0.98,0.87,0.92,0.78,0.86,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.86,0.22,0.69,0.33,0.78,0.86,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.86,0.98,0.87,0.92,0.78,0.86,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.86,0.22,0.69,0.33,0.78,0.86,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.86,0.98,0.87,0.92,0.78,0.86,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.86,0.22,0.69,0.33,0.78,0.86,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.86,0.98,0.87,0.92,0.78,0.86,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.86,0.22,0.69,0.33,0.78,0.86,"('n_neighbors:', 20, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.85,0.98,0.86,0.92,0.79,0.85,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.85,0.22,0.71,0.33,0.79,0.85,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.85,0.98,0.86,0.92,0.79,0.85,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.85,0.22,0.72,0.33,0.79,0.85,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.85,0.98,0.86,0.92,0.79,0.85,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.85,0.22,0.72,0.33,0.79,0.85,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.85,0.98,0.86,0.92,0.79,0.85,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.85,0.22,0.71,0.33,0.79,0.85,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.84,0.98,0.85,0.91,0.77,0.84,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.84,0.20,0.69,0.31,0.77,0.84,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.84,0.98,0.85,0.91,0.77,0.84,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.84,0.20,0.69,0.31,0.77,0.84,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.84,0.98,0.85,0.91,0.77,0.84,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.84,0.20,0.69,0.31,0.77,0.84,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.84,0.98,0.85,0.91,0.77,0.84,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.84,0.20,0.69,0.31,0.77,0.84,"('n_neighbors:', 20, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.84,0.99,0.85,0.91,0.82,0.84,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.84,0.22,0.79,0.34,0.82,0.84,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.85,0.99,0.85,0.91,0.82,0.85,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.85,0.22,0.79,0.34,0.82,0.85,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.84,0.99,0.85,0.91,0.82,0.84,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.84,0.22,0.79,0.34,0.82,0.84,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.84,0.99,0.85,0.91,0.82,0.84,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.84,0.22,0.79,0.34,0.82,0.84,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.83,0.98,0.84,0.90,0.79,0.83,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.83,0.20,0.75,0.31,0.79,0.83,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.83,0.98,0.84,0.90,0.79,0.83,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.83,0.20,0.75,0.31,0.79,0.83,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.83,0.98,0.84,0.90,0.79,0.83,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.83,0.20,0.75,0.31,0.79,0.83,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.83,0.98,0.84,0.90,0.79,0.83,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.83,0.20,0.75,0.31,0.79,0.83,"('n_neighbors:', 50, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.83,0.99,0.83,0.90,0.81,0.83,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.83,0.20,0.80,0.32,0.81,0.83,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.83,0.90,0.81,0.82,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.82,0.20,0.80,0.32,0.81,0.82,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.83,0.90,0.81,0.82,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.82,0.20,0.80,0.32,0.81,0.82,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.83,0.99,0.83,0.90,0.81,0.83,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.83,0.20,0.80,0.32,0.81,0.83,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.81,0.98,0.81,0.89,0.79,0.81,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.76,0.29,0.79,0.81,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.81,0.98,0.81,0.89,0.79,0.81,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.76,0.29,0.79,0.81,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.81,0.98,0.81,0.89,0.79,0.81,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.76,0.29,0.79,0.81,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.81,0.98,0.81,0.89,0.79,0.81,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.76,0.29,0.79,0.81,"('n_neighbors:', 50, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.83,0.99,0.84,0.91,0.83,0.83,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.83,0.21,0.82,0.33,0.83,0.83,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.83,0.99,0.84,0.91,0.83,0.83,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.83,0.21,0.82,0.33,0.83,0.83,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.83,0.99,0.84,0.91,0.83,0.83,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.83,0.21,0.82,0.33,0.83,0.83,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.83,0.99,0.84,0.91,0.83,0.83,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.83,0.21,0.82,0.33,0.83,0.83,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.90,0.8,0.82,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.82,0.19,0.78,0.31,0.8,0.82,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.90,0.8,0.82,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.82,0.19,0.78,0.31,0.8,0.82,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.90,0.8,0.82,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.82,0.19,0.78,0.31,0.8,0.82,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.90,0.8,0.82,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.82,0.19,0.78,0.31,0.8,0.82,"('n_neighbors:', 75, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.82,0.81,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.81,0.19,0.82,0.31,0.82,0.81,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.81,0.81,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.81,0.19,0.82,0.31,0.81,0.81,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.81,0.81,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.81,0.19,0.82,0.31,0.81,0.81,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.82,0.81,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.81,0.19,0.82,0.31,0.82,0.81,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.8,0.8,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.8,0.17,0.79,0.28,0.8,0.8,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.79,0.8,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.8,0.17,0.79,0.28,0.79,0.8,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.8,0.8,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.8,0.17,0.79,0.28,0.8,0.8,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.8,0.8,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.8,0.17,0.79,0.28,0.8,0.8,"('n_neighbors:', 75, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.83,0.99,0.83,0.90,0.82,0.83,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.83,0.20,0.82,0.33,0.82,0.83,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.83,0.99,0.83,0.90,0.82,0.83,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.83,0.20,0.82,0.33,0.82,0.83,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.83,0.99,0.83,0.90,0.83,0.83,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.83,0.20,0.82,0.33,0.83,0.83,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.83,0.99,0.83,0.90,0.82,0.83,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.83,0.20,0.82,0.33,0.82,0.83,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.89,0.81,0.82,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.82,0.19,0.80,0.30,0.81,0.82,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.89,0.81,0.82,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.82,0.19,0.80,0.30,0.81,0.82,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.89,0.81,0.82,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.82,0.19,0.80,0.30,0.81,0.82,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.89,0.81,0.82,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.82,0.19,0.80,0.30,0.81,0.82,"('n_neighbors:', 100, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.81,0.81,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.81,0.30,0.81,0.81,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.81,0.81,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.82,0.30,0.81,0.81,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.81,0.81,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.82,0.30,0.81,0.81,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.81,0.81,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.81,0.30,0.81,0.81,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.79,0.99,0.79,0.88,0.8,0.79,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.79,0.17,0.80,0.28,0.8,0.79,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.79,0.99,0.79,0.88,0.8,0.79,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.79,0.17,0.80,0.28,0.8,0.79,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.79,0.99,0.79,0.88,0.8,0.79,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.79,0.17,0.80,0.28,0.8,0.79,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.79,0.99,0.79,0.88,0.8,0.79,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.79,0.17,0.80,0.28,0.8,0.79,"('n_neighbors:', 100, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.90,0.83,0.82,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.82,0.20,0.83,0.32,0.83,0.82,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.90,0.83,0.82,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.82,0.20,0.83,0.32,0.83,0.82,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.90,0.82,0.82,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.82,0.20,0.83,0.32,0.82,0.82,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.90,0.83,0.82,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.82,0.20,0.83,0.32,0.83,0.82,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.8,0.81,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.80,0.30,0.8,0.81,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.8,0.81,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.80,0.30,0.8,0.81,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.8,0.81,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.80,0.30,0.8,0.81,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.8,0.81,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.81,0.18,0.80,0.30,0.8,0.81,"('n_neighbors:', 150, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.81,0.8,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.83,0.30,0.81,0.8,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.81,0.8,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.83,0.29,0.81,0.8,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.81,0.8,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.83,0.30,0.81,0.8,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.81,0.8,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.83,0.30,0.81,0.8,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.78,0.99,0.78,0.87,0.79,0.78,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.78,0.16,0.80,0.27,0.79,0.78,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.78,0.99,0.78,0.87,0.79,0.78,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.78,0.16,0.80,0.27,0.79,0.78,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.78,0.99,0.78,0.87,0.79,0.78,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.78,0.16,0.80,0.27,0.79,0.78,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.78,0.99,0.78,0.87,0.79,0.78,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.78,0.16,0.80,0.27,0.79,0.78,"('n_neighbors:', 150, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.89,0.82,0.82,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.82,0.19,0.83,0.32,0.82,0.82,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.89,0.82,0.82,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.82,0.20,0.83,0.32,0.82,0.82,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.89,0.82,0.82,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.82,0.19,0.83,0.32,0.82,0.82,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.82,0.99,0.82,0.89,0.82,0.82,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.82,0.19,0.83,0.32,0.82,0.82,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.8,0.8,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.80,0.29,0.8,0.8,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.8,0.8,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.80,0.29,0.8,0.8,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.8,0.8,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.80,0.29,0.8,0.8,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.80,0.88,0.8,0.8,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.80,0.29,0.8,0.8,"('n_neighbors:', 200, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.79,0.88,0.81,0.8,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.82,0.29,0.81,0.8,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.79,0.88,0.81,0.8,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.82,0.29,0.81,0.8,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.79,0.88,0.81,0.8,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.83,0.29,0.81,0.8,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.79,0.88,0.81,0.8,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.8,0.18,0.82,0.29,0.81,0.8,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.78,0.99,0.77,0.87,0.79,0.78,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.78,0.16,0.80,0.27,0.79,0.78,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.78,0.99,0.77,0.87,0.79,0.78,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.78,0.16,0.80,0.27,0.79,0.78,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.78,0.99,0.77,0.87,0.79,0.78,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.78,0.16,0.80,0.27,0.79,0.78,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.78,0.99,0.77,0.87,0.79,0.78,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.78,0.16,0.80,0.27,0.79,0.78,"('n_neighbors:', 200, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.82,0.81,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.81,0.19,0.83,0.31,0.82,0.81,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.82,0.81,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.81,0.19,0.83,0.31,0.82,0.81,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.82,0.81,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.81,0.19,0.83,0.31,0.82,0.81,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.81,0.99,0.81,0.89,0.82,0.81,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.81,0.19,0.83,0.31,0.82,0.81,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.79,0.88,0.8,0.8,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.8,0.17,0.80,0.29,0.8,0.8,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.79,0.88,0.8,0.8,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.8,0.17,0.80,0.29,0.8,0.8,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.79,0.88,0.8,0.8,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.8,0.17,0.80,0.28,0.8,0.8,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.8,0.99,0.79,0.88,0.8,0.8,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.8,0.17,0.80,0.29,0.8,0.8,"('n_neighbors:', 300, ' weights:', 'distance', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.79,0.99,0.79,0.88,0.8,0.79,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.79,0.17,0.82,0.28,0.8,0.79,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.79,0.99,0.79,0.88,0.8,0.79,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.79,0.17,0.82,0.28,0.8,0.79,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.79,0.99,0.79,0.88,0.8,0.79,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.79,0.17,0.82,0.28,0.8,0.79,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.79,0.99,0.79,0.88,0.8,0.79,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.79,0.17,0.82,0.28,0.8,0.79,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'manhattan', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,0,0.77,0.99,0.77,0.86,0.78,0.77,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,1,0.77,0.16,0.80,0.26,0.78,0.77,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'auto')"
KNN,both,BorderlineSmote,0,0.77,0.99,0.77,0.86,0.78,0.77,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,1,0.77,0.16,0.80,0.26,0.78,0.77,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'ball_tree')"
KNN,both,BorderlineSmote,0,0.77,0.99,0.77,0.86,0.78,0.77,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,1,0.77,0.16,0.80,0.26,0.78,0.77,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'kd_tree')"
KNN,both,BorderlineSmote,0,0.77,0.99,0.77,0.86,0.78,0.77,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
KNN,both,BorderlineSmote,1,0.77,0.16,0.80,0.26,0.78,0.77,"('n_neighbors:', 300, ' weights:', 'uniform', ' metrics:', 'minkowski', ' algorithm', 'brute')"
